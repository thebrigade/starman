// Generated by IcedCoffeeScript 1.3.3g
(function() {
  var colors, program, star, starman, todoString;

  program = require('commander');

  colors = require('colors');

  starman = require('./starman');

  todoString = 'todo: '.blue;

  star = '\u2606'.red;

  program.version('0.0.1').option('-v, --verbose', 'be chatty.');

  program.command('init').description('Set up a new project with the appropriate directory structure. Run this within your new project\'s root directory.').action(function(options) {
    return starman.init();
  });

  program.command('clean').description('Nuke the release/ directory (don\'t worry, its all regenerated anyway).').action(function(options) {
    return starman.clean();
  });

  program.command('build').description('Compile everything into the release directory.').action(function(options) {
    return starman.build();
  });

  program.command('watch').description('Keep watching for changes and then compile everything into the release directory. (Blocks)').action(function(options) {
    return starman.watch();
  });

  program.command('serve').description('Throw up a server on $port to serve up everything in the release directory. (Blocks)').option('-p, --port [port]', 'The port with which to serve upon. Default is 8080.', parseInt).option('-d, --dont-open', 'Don\'t open the url after launching.').on("--help", function() {}).action(function(options) {
    var port, portString;
    port = options.port || 8080;
    portString = ("" + port).green;
    starman.serve(port);
    if (!options.dontOpen) return starman.open(port);
  });

  program.command('dev').description('Throw up a server, watch for changes, and open the site in the default browser. Great for speedy development. (Blocks)').option('-p, --port [port]', 'The port with which to serve upon. Default is 8080.', parseInt).option('-d, --dont-open', 'Don\'t open the url after launching.').on("--help", function() {}).action(function(options) {
    var port;
    port = options.port || 8080;
    starman.build();
    starman.watch();
    starman.serve(port);
    if (!options.dontOpen) return starman.open(port);
  });

  module.exports.run = function() {
    process.stdout.write("" + star + " ");
    return program.parse(process.argv);
  };

}).call(this);
